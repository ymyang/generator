package ${config.basePackageName}.feign.${moduleName}.hystrix;

import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.web.bind.annotation.*;
import org.springframework.stereotype.Component;
import feign.hystrix.FallbackFactory;
import org.springframework.cloud.openfeign.SpringQueryMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.example.framework.common.ResponseEntity;

import ${config.basePackageName}.param.${moduleName}.${className}QueryParam;
import ${config.basePackageName}.param.${moduleName}.${className}CreateParam;
import ${config.basePackageName}.param.${moduleName}.${className}UpdateParam;
import ${config.basePackageName}.dto.${moduleName}.${className}Dto;
import ${config.basePackageName}.feign.${moduleName}.${className}FeignClient;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Component
public class ${className}FeignFallbackFactory implements FallbackFactory<${className}FeignClient> {

    Logger log = LoggerFactory.getLogger(${className}FeignFallbackFactory.class);

    @Override
    public ${className}FeignClient create(Throwable cause) {

        return new ${className}FeignClient() {

            @Override
            public ResponseEntity<Page<${className}Dto>> index(@SpringQueryMap ${className}QueryParam queryParam) {
                log.error("Feign error -- Parameters: {}, Exception: {}", queryParam, cause);
                return ResponseEntity.error("fallback; reason was: " + cause.getMessage());
            }

            @Override
            public ResponseEntity<${className}Dto> detail(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}) {
                log.error("Feign error -- Parameters: {}, Exception: {}", ${pk.attrname}, cause);
                return ResponseEntity.error("fallback; reason was: " + cause.getMessage());
            }

            @Override
            public ResponseEntity<${className}Dto> create(@RequestBody ${className}CreateParam createParam) {
                log.error("Feign error -- Parameters: {}, Exception: {}", createParam, cause);
                return ResponseEntity.error("fallback; reason was: " + cause.getMessage());
            }

            @Override
            public ResponseEntity<${className}Dto> update(@RequestBody ${className}UpdateParam updateParam) {
                log.error("Feign error -- Parameters: {}, Exception: {}", updateParam, cause);
                return ResponseEntity.error("fallback; reason was: " + cause.getMessage());
            }

            @Override
            public ResponseEntity delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s) {
                log.error("Feign error -- Parameters: {}, Exception: {}", ${pk.attrname}s, cause);
                return ResponseEntity.error("fallback; reason was: " + cause.getMessage());
            }
        };
    }

}